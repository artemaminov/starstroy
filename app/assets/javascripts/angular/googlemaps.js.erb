(function () {

  var app = angular.module('starstroy', ['ngMap', 'ngRoute']);

  app.config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {
    $locationProvider.html5Mode(true);
    $routeProvider
        .when('/', {
          templateUrl: '<%= asset_path('angular/templates/blocks_list.html') %>',
          controller: 'blockCtrl'
        })
        .when('/blocks/:id', {
          templateUrl: '<%= asset_path('angular/templates/block.html') %>',
          controller: 'blockCtrl'
        })
        .when('/coop', {
          templateUrl: '<%= asset_path('angular/templates/coop.html') %>',
          controller: 'coopCtrl'
        })
        .when('/contacts', {
          templateUrl: '<%= asset_path('angular/templates/contacts.html') %>',
          controller: 'contactsCtrl'
        })
        .when('/contacts/:id', {
          templateUrl: '<%= asset_path('angular/templates/contacts.html') %>',
          controller: 'contactsCtrl'
        })
  }]);

  app.factory('mapProvider', ['$http', function ($http) {
    return {
      map: {},
      markers: function (id) {
        if (id == null) {
          return $http.get('blocks.json');
        } else {
          return $http.get('blocks/' + id + '.json');
        }
      },
      markerState: function (date) {
        var timeFlag = (new Date(date) > Date.now());
        return {
          icon: timeFlag ? '<%= asset_path('map-icn-inprogress.png') %>' : '<%= asset_path('map-icn-ready.png') %>',
          color: timeFlag ? '' : 'green'
        };
      }
    };
  }]);

  app.controller('mapCtrl', ['$scope', 'mapProvider', function ($scope, mapProvider) {
    mapProvider.markers().then(function (response) {
      $scope.markers = response.data;
      $scope.markerState = mapProvider.markerState;
    });
    $scope.$on('mapInitialized', function (event, map) {
      mapProvider.map = map;
    });
    $scope.showOffer = function(event, id) {
      $scope.marker = $scope.markers[id];
      $scope.showInfoWindow.apply(this, [event, 'info']);
    }
  }]);

  app.controller('blockCtrl', ['$scope', '$routeParams', 'mapProvider', function ($scope, $routeParams, mapProvider) {
    mapProvider.markers($routeParams.id).then(function (response) {
      $scope.markers = response.data;
      $scope.markerState = mapProvider.markerState;
    });
    $scope.markerZoom = function (id, lat, lng) {
      $scope.$parent.backBtnState = true;
      var latlng = new google.maps.LatLng(lat, lng);
//      var browserWidth = window.innerWidth;
//      var offsetX = (browserWidth - 580) / 2 - (browserWidth / 2 - 580);
      mapProvider.map.panToWithOffset(latlng, -290, -50);
//      mapProvider.map.setZoom(16);

    }
  }]);

  app.controller('navigationCtrl', ['$scope', 'mapProvider',   function ($scope, mapProvider) {
    $scope.currentTab = 1;
    $scope.backBtnState = false;
    $scope.tab = function (tab) {
      $scope.currentTab = tab;
    };
    $scope.tabClass = function (current) {
      if ($scope.currentTab == current) return 'current'
    };
    $scope.backBtn = function () {
      $('.carousel').trigger('destroy');
      mapProvider.markers().then(function (response) {
        $scope.backBtnState = false;
      });
    };
  }]);

  app.controller('coopCtrl', ['$scope', function($scope) {

  }]);

  app.controller('contactsCtrl', ['$scope', function($scope) {

  }]);

})();

google.maps.Map.prototype.panToWithOffset = function(latlng, offsetX, offsetY) {
  var map = this;
  var overlayView = new google.maps.OverlayView();
  overlayView.onAdd = function() {
    var projection = this.getProjection();
    var containerCoords = projection.fromLatLngToContainerPixel(latlng);
    containerCoords.x = containerCoords.x + offsetX;
    containerCoords.y = containerCoords.y + offsetY;
    map.panTo(projection.fromContainerPixelToLatLng(containerCoords));
  };
  overlayView.draw = function() {};
  overlayView.setMap(this);
};
